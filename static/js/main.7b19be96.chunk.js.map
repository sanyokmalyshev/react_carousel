{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","remain","props","images","length","frameSize","state","move","remainPictures","timerId","setInterval","nextSlide","animationDuration","step","infinite","itemWidth","setState","prevState","prevSlide","prevProps","this","clearInterval","className","style","width","map","image","index","key","transform","src","alt","String","type","onClick","disabled","React","Component","App","duration","handerInput","e","valueInput","Number","currentTarget","value","id","htmlFor","defaultValue","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b19be96.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  move: number,\n  remainPictures: number;\n};\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nclass Carousel extends React.Component<Props, State> {\n  remain = this.props.images.length - this.props.frameSize;\n\n  state: Readonly<State> = {\n    move: 0,\n    remainPictures: this.remain,\n  };\n\n  timerId = setInterval(() => {\n    this.nextSlide();\n  }, this.props.animationDuration);\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    if (frameSize !== prevProps.frameSize\n      || itemWidth !== prevProps.itemWidth\n      || animationDuration !== prevProps.animationDuration) {\n      this.setState({\n        move: 0,\n        remainPictures: images.length - frameSize,\n      });\n\n      clearInterval(this.timerId);\n      this.timerId = setInterval(() => {\n        this.nextSlide();\n      }, this.props.animationDuration);\n    }\n\n    if (animationDuration === 0) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  nextSlide = () => {\n    const { remainPictures } = this.state;\n    const {\n      step,\n      infinite,\n      itemWidth,\n      images,\n      frameSize,\n    } = this.props;\n\n    if (remainPictures === 0 && !infinite) {\n      return;\n    }\n\n    if (remainPictures === 0 && infinite) {\n      this.setState({\n        move: 0,\n        remainPictures: images.length - frameSize,\n      });\n\n      return;\n    }\n\n    if (remainPictures >= step) {\n      this.setState(prevState => (\n        {\n          remainPictures: prevState.remainPictures - step,\n          move: prevState.move + itemWidth * step,\n        }));\n    } else {\n      this.setState(prevState => (\n        {\n          move: prevState.move + itemWidth * prevState.remainPictures,\n          remainPictures: 0,\n        }));\n    }\n  };\n\n  prevSlide = () => {\n    const {\n      images,\n      step,\n      frameSize,\n      infinite,\n      itemWidth,\n    } = this.props;\n    const { remainPictures } = this.state;\n\n    if (remainPictures === (images.length - frameSize) && infinite) {\n      this.setState({\n        move: itemWidth * remainPictures,\n        remainPictures: 0,\n      });\n\n      return;\n    }\n\n    if ((images.length - frameSize - remainPictures) >= step) {\n      this.setState(prevState => (\n        {\n          remainPictures: prevState.remainPictures + step,\n          move: prevState.move - itemWidth * step,\n        }));\n    } else {\n      this.setState(\n        {\n          remainPictures: images.length - frameSize,\n          move: 0,\n        },\n      );\n    }\n  };\n\n  render() {\n    const { move, remainPictures } = this.state;\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      infinite,\n    } = this.props;\n\n    return (\n      <div className=\"Carousel\" style={{ width: `${itemWidth * frameSize}px` }}>\n        <ul className=\"Carousel__list\">\n          {images.map((image, index) => {\n            const key = index + 1;\n\n            return (\n              (\n                <li\n                  className=\"Carousel__item\"\n                  style={{ transform: `translateX(-${move}px)` }}\n                  key={key}\n                >\n                  <img\n                    src={image}\n                    alt={String(index + 1)}\n                    style={{ width: `${itemWidth}px` }}\n                  />\n                </li>\n              )\n            );\n          })}\n        </ul>\n\n        <div className=\"Carousel__buttons arrow-1\">\n          <button\n            type=\"button\"\n            onClick={this.prevSlide}\n            className=\"button button__prev\"\n            disabled={remainPictures === images.length - frameSize && !infinite}\n            data-cy=\"next\"\n          >\n            ᐸ\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.nextSlide}\n            className=\"button button__next\"\n            disabled={remainPictures === 0 && !infinite}\n          >\n            ᐳ\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  duration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 2,\n    frameSize: 3,\n    itemWidth: 130,\n    duration: 1000,\n    infinite: false,\n  };\n\n  handerInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let valueInput = Number(e.currentTarget.value);\n    const { id } = e.currentTarget;\n\n    if (valueInput < 130 && id === 'itemId') {\n      valueInput = 130;\n    }\n\n    if (valueInput === 0 && id === 'frameSize') {\n      return;\n    }\n\n    switch (id) {\n      case 'stepId':\n        this.setState({\n          step: valueInput,\n        });\n        break;\n      case 'frameSize':\n        this.setState({\n          frameSize: valueInput,\n        });\n        break;\n      case 'itemId':\n        this.setState({\n          itemWidth: valueInput,\n        });\n        break;\n      case 'animationDuration':\n        this.setState({\n          duration: valueInput,\n        });\n        break;\n      case 'infinite':\n        this.setState(prevState => (\n          {\n            infinite: !prevState.infinite,\n          }));\n        break;\n      default: break;\n    }\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"App__title\" data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <div className=\"App__inputs\">\n          <label htmlFor=\"stepId\" className=\"App__label\">\n            <span className=\"App__inputName\">Step: </span>\n            <input\n              type=\"number\"\n              id=\"stepId\"\n              defaultValue={2}\n              className=\"App__input\"\n              onChange={this.handerInput}\n            />\n          </label>\n          <label htmlFor=\"frameSize\" className=\"App__label\">\n            <span className=\"App__inputName\">FrameSize: </span>\n            <input\n              type=\"number\"\n              id=\"frameSize\"\n              defaultValue={3}\n              className=\"App__input\"\n              onChange={this.handerInput}\n            />\n          </label>\n          <label htmlFor=\"itemId\" className=\"App__label\">\n            <span className=\"App__inputName\">ItemWidth: </span>\n            <input\n              type=\"number\"\n              id=\"itemId\"\n              defaultValue={130}\n              className=\"App__input\"\n              onChange={this.handerInput}\n            />\n          </label>\n          <label htmlFor=\"animationDuration\" className=\"App__label\">\n            <span className=\"App__inputName\">Duration: </span>\n            <input\n              type=\"number\"\n              id=\"animationDuration\"\n              defaultValue={1000}\n              className=\"App__input\"\n              onChange={this.handerInput}\n            />\n          </label>\n          <label htmlFor=\"infinite\" className=\"App__label\">\n            <span className=\"App__inputName\">Infinite: </span>\n            <input\n              type=\"checkbox\"\n              id=\"infinite\"\n              className=\"App__checkbox\"\n              onChange={this.handerInput}\n            />\n            <span />\n          </label>\n        </div>\n\n        <Carousel\n          images={images}\n          step={this.state.step}\n          frameSize={this.state.frameSize}\n          itemWidth={this.state.itemWidth}\n          animationDuration={this.state.duration}\n          infinite={this.state.infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}